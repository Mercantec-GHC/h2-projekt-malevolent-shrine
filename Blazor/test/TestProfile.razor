@page "/test-profile"
@layout Blazor.test.TestLayout
@inject Blazor.Services.APIService Api

<div class="hero">
    <h1 class="site-title">My profile</h1>
    <p class="site-sub">See your info and bookings.</p>
</div>

@if (loading)
{
    <div class="loading">Loading...</div>
}
else if (!authed)
{
    <div class="hero"><div class="msg">Please log in first.</div></div>
}
else
{
    <div class="container">
        <div class="profile-card">
            <div class="profile-row"><b>Name:</b> @user?.FirstName @user?.LastName</div>
            <div class="profile-row"><b>Email:</b> @user?.Email</div>
            <div class="profile-row"><b>Role:</b> @user?.Role</div>
            <div class="profile-row"><b>VIP:</b> @(user?.IsVIP == true ? "Yes" : "No")</div>
            <div class="profile-row"><b>Joined:</b> @user?.CreatedAt.ToString("yyyy-MM-dd")</div>
        </div>

        <h2 class="block-title">My bookings</h2>
        @if (bookings.Count == 0)
        {
            <div class="empty">No bookings yet.</div>
        }
        else
        {
            <div class="bookings-list">
                @foreach (var b in bookings)
                {
                    <div class="booking-item">
                        <div>Room: @b.RoomId</div>
                        <div>From: @b.CheckInDate.ToString("yyyy-MM-dd")</div>
                        <div>To: @b.CheckOutDate.ToString("yyyy-MM-dd")</div>
                        <div>Status: @b.Status</div>
                        <div>Total: @b.TotalPrice.ToString("0") kr</div>
                    </div>
                }
            </div>
        }
    </div>
}

@code {
    private SimpleUserMe? user;
    private List<DomainModels.DTOs.BookingReadDto> bookings = new();
    private bool loading = true;
    private bool authed = false;

    protected override async Task OnInitializedAsync()
    {
        var token = await Api.GetToken();
        authed = !string.IsNullOrWhiteSpace(token);
        if (!authed)
        {
            loading = false;
            return;
        }

        // Получаем текущего пользователя и мои брони через APIService (BaseAddress → API, с Authorization)

        loading = false;
    }

    [Inject] public HttpClient Http { get; set; } = default!;

    public class SimpleUserMe
    {
        public int Id { get; set; }
        public string Email { get; set; } = string.Empty;
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public bool IsVIP { get; set; }
        public DateTime CreatedAt { get; set; }
        public string Role { get; set; } = string.Empty;
        public string? ProfilePicture { get; set; }
        public DateTime DateOfBirth { get; set; }
    }
}