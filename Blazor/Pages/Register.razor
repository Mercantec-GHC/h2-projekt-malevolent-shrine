@page "/register"
@inject NavigationManager Navigation

@if (showMessage)
{
    <p>@errorMessage</p>
}

<div class="form-wrapper">
    <h3>Register</h3>
    <EditForm model="user" OnValidSubmit="() => HandleSubmitAsync(user)">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-columns">
            <!-- Левая колонка -->
            <div class="form-column">
                <div class="text-field">
                    <label for="fName">First name *:</label>
                    <InputText id="fName" @bind-Value="user.FirstName" class="input" />
                    <ValidationMessage For="@(() => user.FirstName)" />
                </div>

                <div class="text-field">
                    <label for="email">E-mail *:</label>
                    <InputText id="email" @bind-Value="user.Email" class="input" />
                    <ValidationMessage For="@(() => user.Email)" />
                </div>

                <div class="text-field">
                    <label for="address">Address *:</label>
                    <InputText id="address" @bind-Value="user.Address" class="input" />
                    <ValidationMessage For="@(() => user.Address)" />
                </div>
            </div>

            <!-- Правая колонка -->
            <div class="form-column">
                <div class="text-field">
                    <label for="lName">Last name *:</label>
                    <InputText id="lName" @bind-Value="user.LastName" class="input" />
                    <ValidationMessage For="@(() => user.LastName)" />
                </div>

                <div class="text-field">
                    <label for="pNumber">Phone Number:</label>
                    <InputText id="pNumber" @bind-Value="user.PhoneNumber" class="input" />
                    <ValidationMessage For="@(() => user.PhoneNumber)" />
                </div>

                <div class="text-field">
                    <label for="username">Phone Number:</label>
                    <InputText id="username" @bind-Value="user.Username" class="input" />
                    <ValidationMessage For="@(() => user.Username)" />
                </div>

                <div class="text-field">
                    <label for="password">Password: *</label>
                    <InputText id="password" type="password" @bind-Value="user.Password" class="input" />
                    <ValidationMessage For="@(() => user.Password)" />
                </div>
            </div>
        </div>

        <button type="submit" class="submit-button">REGISTER</button>

        <p class="to-login">
            Already have an account? <a href="/login">Sign in</a>
        </p>
    </EditForm>
</div>



@code {
    private UserCreateDto user = new UserCreateDto();
    string errorMessage = "Something went wrong while trying to register new user. Please try again later or contact support.";
    bool showMessage = false;

    private async Task HandleSubmitAsync(UserCreateDto user)
    {
        showMessage = false;

        bool success = await ApiService.RegisterNewUser(user);

        if (success)
        {
            StateHasChanged();
            Navigation.NavigateTo("/");
        }
        else
        {
            showMessage = true;
        }
    }
}
