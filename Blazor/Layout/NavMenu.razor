@inject IJSRuntime JSRuntime
@inject Blazor.Services.APIService Api
@inject NavigationManager Nav

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand jp" href="/">Malevolent Shrine</a>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable">
    <nav class="nav-wrapper">
        <div class="nav-items">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <i class="bi bi-house-door-fill"></i> Home
                </NavLink>
            </div>
            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="jwt-learn">
                    <i class="bi bi-book-fill"></i> JWT Learn
                </NavLink>
            </div>
            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="telegram-quiz">
                    <i class="bi bi-telegram"></i> Telegram Quiz
                </NavLink>
            </div>
            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="api-quiz">
                    <i class="bi bi-code-slash"></i> API Quiz
                </NavLink>
            </div>
            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="signalr-quiz">
                    <i class="bi bi-broadcast"></i> SignalR Quiz
                </NavLink>
            </div>
            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="ad-quiz">
                    <i class="bi bi-shield-lock-fill"></i> AD Quiz
                </NavLink>
            </div>
            
            @if (isLoggedIn)
            {   
                @* Менеджер: назначение задач уборки *@
                @if (isManagerOrAdmin)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="admin-dashboard">
                            <i class="bi bi-gear-fill"></i> AD Dashboard (Test)
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="assign-cleaning">
                            <i class="bi bi-list-check"></i> Assign cleaning
                        </NavLink>
                    </div>
                    
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/tickets/me" Match="NavLinkMatch.Prefix">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> My tickets
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/tickets/role" Match="NavLinkMatch.Prefix">
                            <span class="oi oi-people" aria-hidden="true"></span> Tickets for my role
                        </NavLink>
                    </div>
                }
                
                @* Уборщик: мои задачи *@
                @if (isCleaner)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="my-tasks">
                            <i class="bi bi-broom"></i> My tasks
                        </NavLink>
                    </div>
                    
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/tickets/me" Match="NavLinkMatch.Prefix">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> My tickets
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/tickets/role" Match="NavLinkMatch.Prefix">
                            <span class="oi oi-people" aria-hidden="true"></span> Tickets for my role
                        </NavLink>
                    </div>
                }
            }
        </div>

        <div class="bottom-nav">
            @if (!isLoggedIn)
            {
                <NavLink class="nav-link login" href="login">
                    <i class="bi bi-box-arrow-in-right"></i> Login
                </NavLink>
                <hr />
                <NavLink class="nav-link register" href="register">
                    <i class="bi bi-person-plus-fill"></i> Register
                </NavLink>
            }
            else
            {
                <NavLink class="nav-link register" href="profile">
                    <i class="bi bi-person-circle"></i> Profile
                </NavLink>
                <hr />
                <NavLink class="nav-link register" style="cursor: pointer" @onclick="() => Logout()">
                    <i class="bi bi-box-arrow-right"></i> Logout
                </NavLink>

            }
        </div>
    </nav>
</div>


@code {
    [Parameter] public EventCallback OnToggleSidebar { get; set; }
    [Parameter] public bool IsSidebarCollapsed { get; set; }

    public bool isLoggedIn = false;
    private bool isCleaner = false;
    private bool isManagerOrAdmin = false;

    private string? NavMenuCssClass => IsSidebarCollapsed ? "collapse" : "open";

    private Task HandleToggle() => OnToggleSidebar.InvokeAsync(null);

    protected override async Task OnInitializedAsync()
    {
        var token = await JSRuntime.InvokeAsync<string>("auth.getToken");
        isLoggedIn = !string.IsNullOrWhiteSpace(token);

        var role = (await JSRuntime.InvokeAsync<string>("auth.getRole"))?.Trim();
        Console.WriteLine($"[DEBUG] Role received from JS: '{role}'");

        isCleaner = string.Equals(role, "Rengøring", StringComparison.OrdinalIgnoreCase);
        isManagerOrAdmin = string.Equals(role, "Manager", StringComparison.OrdinalIgnoreCase)
                        || string.Equals(role, "Admin", StringComparison.OrdinalIgnoreCase)
                        || string.Equals(role, "InfiniteVoid", StringComparison.OrdinalIgnoreCase);

        Console.WriteLine($"[DEBUG] isCleaner: {isCleaner}, isManagerOrAdmin: {isManagerOrAdmin}");

        StateHasChanged();
    }


    private async Task Logout()
    {
        await Api.Logout();
        isLoggedIn = false;
        Nav.NavigateTo("/", true);
    }
}
